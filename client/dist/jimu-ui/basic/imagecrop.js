System.register(["jimu-core","jimu-ui","jimu-for-builder"],(function(t){var e,o,i;return{setters:[function(t){e=t},function(t){o=t},function(t){i=t}],execute:function(){t(function(t){var e={};function o(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,o),s.l=!0,s.exports}return o.m=t,o.c=e,o.d=function(t,e,i){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)o.d(i,s,function(e){return t[e]}.bind(null,s));return i},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=993)}({0:function(t,o){t.exports=e},1:function(t,e){t.exports=o},105:function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M19.637 15.866L30.951 27.18a2.667 2.667 0 01-3.771 3.771L15.866 19.637 4.552 30.951A2.667 2.667 0 01.781 27.18l11.314-11.314L.781 4.552A2.667 2.667 0 014.552.781l11.314 11.314L27.18.781a2.667 2.667 0 013.771 3.771L19.637 15.866z"></path></svg>'},27:function(t,e){t.exports=i},51:function(t,e){t.exports='<svg viewBox="0 0 12 12" xmlns="http://www.w3.org/2000/svg"><g fill-rule="nonzero" fill="none"><path d="M4.586 8.657l6.01-6.01a.5.5 0 01.707.707l-6.01 6.01a1 1 0 01-1.414 0L.697 6.182a.5.5 0 01.707-.707l3.182 3.182z" fill="#000"></path><path d="M0 0h12v12H0z"></path></g></svg>'},993:function(t,e,o){"use strict";o.r(e),o.d(e,"CropType",(function(){return s.CropType})),o.d(e,"ImageCrop",(function(){return w}));var i=o(0),s=o(1);const r=o(51),n=o(105);class a extends i.React.Component{constructor(t){super(t)}render(){let{showGrid:t,style:e,className:o}=this.props;o||(o="");const a=e.width,h={display:"flex",alignItems:"center",justifyContent:"flex-end",minWidth:"75px",paddingBottom:"5px",left:"-1px",paddingTop:"5px",position:"absolute",top:"-40px",height:"40px",width:Math.min(this.props.screenWidth,a)+"px",boxShadow:"0 2px 8px 1px rgba(0,0,0,0.20)",backgroundColor:"#fff",borderRadius:"2px",cursor:"default"};this.props.widgetArea.top-40<0&&(h.top=this.props.widgetArea.height+"px");const p=i.React.createElement("div",{onMouseDown:t=>{t.stopPropagation()},style:h},i.React.createElement("div",{className:"tool-item mr-1",style:{float:"right",padding:"0.42rem 0.5rem"},onClick:()=>{this.props.onConfirmCrop&&this.props.onConfirmCrop(this.props.svgViewBox,this.props.svgPath,this.props.cropShape)}},i.React.createElement(s.Icon,{icon:r,width:16,height:16,className:"mr-0"})),i.React.createElement("div",{className:"tool-item mr-1",style:{float:"right",padding:"0.42rem 0.5rem",marginLeft:"0.1rem"},onClick:()=>{this.props.onCancelCrop&&this.props.onCancelCrop()}},i.React.createElement(s.Icon,{icon:n,width:13,height:13,className:"mr-0"})));return i.React.createElement("div",{style:e,className:Object(i.classNames)("cropperArea "+o,{gridLines:t})},i.React.createElement("svg",{width:"100%",height:"100%",viewBox:this.props.svgViewBox?this.props.svgViewBox:"0 0 28 28",preserveAspectRatio:"none"},i.React.createElement("defs",null,i.React.createElement("mask",{id:"mask-setting-"+this.props.widgetId,maskContentUnits:"userSpaceOnUse"},i.React.createElement("rect",{x:"0",y:"0",width:"100%",height:"100%",stroke:"none",fill:"rgb(255, 255, 255, 1)"}),i.React.createElement("svg",{width:"100%",height:"100%",viewBox:this.props.svgViewBox?this.props.svgViewBox:"0 0 28 28",preserveAspectRatio:"none"},i.React.createElement("g",null,i.React.createElement("path",{strokeWidth:"2",strokeDasharray:"10",strokeDashoffset:"0",fill:"#000",d:this.props.svgPath?this.props.svgPath:"m0,0l0,28l28,0l0,-28l-28,0z"}))))),i.React.createElement("rect",{x:"0",y:"0",width:"100%",height:"100%",className:"mask-image",style:{stroke:"none",fill:"rgb(0, 0, 0, 0.7)"}}),i.React.createElement("g",null,i.React.createElement("path",{stroke:"#fff",strokeWidth:".1",fill:"none",strokeDashoffset:"0",d:this.props.svgPath?this.props.svgPath:"m0,0l0,28l28,0l0,-28l-28,0z"}))),p)}}var h=o(27),p=function(t,e,o,i){return new(o||(o=Promise))((function(s,r){function n(t){try{h(i.next(t))}catch(t){r(t)}}function a(t){try{h(i.throw(t))}catch(t){r(t)}}function h(t){var e;t.done?s(t.value):(e=t.value,e instanceof o?e:new o((function(t){t(e)}))).then(n,a)}h((i=i.apply(t,e||[])).next())}))};function c(t,e,o,i){return{x:m(t.x,e.width,o.width,i),y:m(t.y,e.height,o.height,i)}}function m(t,e,o,i){const s=e*i/2-o/2;return Math.min(s,Math.max(t,-s))}function l(t,e){return Math.sqrt(Math.pow(t.y-e.y,2)+Math.pow(t.x-e.x,2))}function d(t,e){return Math.min(t,Math.max(0,e))}function g(t,e){return{x:(e.x+t.x)/2,y:(e.y+t.y)/2}}class u extends i.React.Component{constructor(t){super(t),this.image=null,this.container=null,this.containerRect={},this.imageSize={width:0,height:0,naturalWidth:0,naturalHeight:0},this.dragStartPosition={x:0,y:0},this.dragStartCrop={x:0,y:0},this.lastPinchDistance=0,this.rafDragTimeout=null,this.rafZoomTimeout=null,this.screenWidth=document?document.documentElement.clientWidth:null,this.screenHeight=document?document.documentElement.clientHeight:null,this.getStyle=()=>{const t=window.location.href.replace(window.location.hash,"");return i.css`
      .cropperArea {
        position: relative;
        border: 1px solid rgba(255, 255, 255, 0.5);
        box-sizing: border-box;
        box-shadow: 0 0 0 9999em;
        color: rgba(0,0,0,0.5);

        .tool-item {
          background-color: #EEF0F3;
          cursor: pointer;

          &:hover {
            background-color: #c8cbcd;
            cursor: pointer;
          }
        }
      }

      .gridLines {
        &::before {
          content: " ";
          box-sizing: border-box;
          position: absolute;
          border: 1px solid rgba(255, 255, 255, 0.5);
          top: 0;
          bottom: 0;
          left: 33.33%;
          right: 33.33%;
          borderTop: 0;
          borderBottom: 0;
        }

        &::after {
          content: " ";
          box-sizing: border-box;
          position: absolute;
          border: 1px solid rgba(255, 255, 255, 0.5);
          top: 33.33%;
          bottom: 33.33%;
          left: 0;
          right: 0;
          borderLeft: 0;
          borderRight: 0;
        },
      }

      .roundShape {
        border-radius: 50%
      }

      .mask-border {
        path {
          transition:all 1s linear;
          animation-name:ring;
          animation-duration:9.2s;
          animation-timing-function: linear;
          animation-iteration-count:infinite;
        }
        
        @keyframes ring {
            from {
                stroke-dashoffset:0;
            }
            to {
                stroke-dashoffset:6000;
            }
        }
      }

      .mask-image {
        -webkit-mask-image: url(${t}#mask-setting-${this.props.widgetId});
        mask: url(${t}#mask-setting-${this.props.widgetId});
        mask-image: url(${t}#mask-setting-${this.props.widgetId});
      }
    `},this.preventZoomSafari=t=>t.preventDefault(),this.cleanEvents=()=>{document.removeEventListener("mousemove",this.onMouseMove),document.removeEventListener("mouseup",this.onDragStopped),document.removeEventListener("touchmove",this.onTouchMove),document.removeEventListener("touchend",this.onDragStopped)},this.onImgLoad=()=>{this.computeSizes(),this.emitCropData()},this.computeSizes=()=>{if(this.image){this.imageSize={width:this.image.width,height:this.image.height,naturalWidth:this.image.naturalWidth,naturalHeight:this.image.naturalHeight};const t=this.props.widgetArea.width,e=this.props.widgetArea.height;let o=this.state.minZoom,i=this.state.maxZoom;this.image.width/this.image.height>=t/e?(o=e/this.image.height,i=o+5):(o=t/this.image.width,i=o+5),o>this.props.zoom&&this.props.onZoomChange&&this.props.onZoomChange(o);const s={width:t,height:e};this.setState({cropSize:s,minZoom:o,maxZoom:i},this.recomputeCropPosition)}this.container&&(this.containerRect=this.container.getBoundingClientRect())},this.onMouseDown=t=>{t.preventDefault(),document.addEventListener("mousemove",this.onMouseMove),document.addEventListener("mouseup",this.onDragStopped),this.onDragStart(u.getMousePoint(t))},this.onMouseMove=t=>this.onDrag(u.getMousePoint(t)),this.onTouchStart=t=>{t.preventDefault(),document.addEventListener("touchmove",this.onTouchMove,{passive:!1}),document.addEventListener("touchend",this.onDragStopped),2===t.touches.length?this.onPinchStart(t):1===t.touches.length&&this.onDragStart(u.getTouchPoint(t.touches[0]))},this.onTouchMove=t=>{2===t.touches.length?this.onPinchMove(t):1===t.touches.length&&this.onDrag(u.getTouchPoint(t.touches[0]))},this.onDragStart=({x:t,y:e})=>{this.dragStartPosition={x:t,y:e},this.dragStartCrop={x:this.props.crop.x,y:this.props.crop.y}},this.onDrag=({x:t,y:e})=>{this.rafDragTimeout&&window.cancelAnimationFrame(this.rafDragTimeout),this.rafDragTimeout=window.requestAnimationFrame(()=>{if(void 0===t||void 0===e)return;const o=t-this.dragStartPosition.x,i=e-this.dragStartPosition.y,s=c({x:this.dragStartCrop.x+o,y:this.dragStartCrop.y+i},this.imageSize,this.state.cropSize,this.props.zoom);this.props.onCropChange(s)})},this.onDragStopped=()=>{this.cleanEvents(),this.emitCropData()},this.onWheel=t=>{t.preventDefault();const e=u.getMousePoint(t);let o=null;o=t.deltaY<=0?1.05*this.props.zoom:.95*this.props.zoom,this.setNewZoom(o,e)},this.getPointOnContainer=({x:t,y:e},o)=>{if(!this.containerRect)throw new Error("The Cropper is not mounted");return{x:this.containerRect.width/2-(t-this.containerRect.left),y:this.containerRect.height/2-(e-this.containerRect.top)}},this.getPointOnImage=({x:t,y:e})=>{const{crop:o,zoom:i}=this.props;return{x:(t+o.x)/i,y:(e+o.y)/i}},this.setNewZoom=(t,e)=>{const o=this.getPointOnContainer(e),i=this.getPointOnImage(o),s=Math.min(this.state.maxZoom,Math.max(t,this.state.minZoom)),r=c({x:i.x*s-o.x,y:i.y*s-o.y},this.imageSize,this.state.cropSize,s);this.props.onCropChange(r),this.props.onZoomChange&&this.props.onZoomChange(s)},this.emitCropData=()=>{if(!this.state.cropSize)return;const t=c(this.props.crop,this.imageSize,this.state.cropSize,this.props.zoom),{croppedAreaPercentages:e,croppedAreaPixels:o}=function(t,e,o,i){const s={x:d(100,((e.width-o.width/i)/2-t.x/i)/e.width*100),y:d(100,((e.height-o.height/i)/2-t.y/i)/e.height*100),width:d(100,o.width/e.width*100/i),height:d(100,o.height/e.height*100/i)};return{croppedAreaPercentages:s,croppedAreaPixels:{x:d(e.naturalWidth,s.x*e.naturalWidth/100),y:d(e.naturalHeight,s.y*e.naturalHeight/100),width:d(e.naturalWidth,s.width*e.naturalWidth/100),height:d(e.naturalHeight,s.height*e.naturalHeight/100)}}}(t,this.imageSize,this.state.cropSize,this.props.zoom);this.props.onCropComplete&&this.props.onCropComplete(e,o)},this.recomputeCropPosition=()=>{const t=c(this.props.crop,this.imageSize,this.state.cropSize,this.props.zoom);this.props.onCropChange(t),this.emitCropData()},this.onImgError=()=>{const t={width:this.props.widgetArea.width,height:this.props.widgetArea.height};this.setState({cropSize:t})},this.onResize=(t,e)=>{this.screenWidth=t,this.screenHeight=e},this.state={cropSize:null,minZoom:this.props.minZoom,maxZoom:this.props.maxZoom}}componentDidMount(){window.addEventListener("resize",this.computeSizes),this.container.addEventListener("gesturestart",this.preventZoomSafari),this.container.addEventListener("gesturechange",this.preventZoomSafari),this.container.addEventListener("wheel",this.onWheel)}componentWillUnmount(){window.removeEventListener("resize",this.computeSizes),this.container.removeEventListener("gesturestart",this.preventZoomSafari),this.container.removeEventListener("gesturechange",this.preventZoomSafari),this.container.removeEventListener("wheel",this.onWheel),this.cleanEvents()}componentDidUpdate(t){t.aspect!==this.props.aspect?this.computeSizes():t.zoom!==this.props.zoom&&this.recomputeCropPosition()}onPinchStart(t){const e=u.getTouchPoint(t.touches[0]),o=u.getTouchPoint(t.touches[1]);this.lastPinchDistance=l(e,o),this.onDragStart(g(e,o))}onPinchMove(t){const e=u.getTouchPoint(t.touches[0]),o=u.getTouchPoint(t.touches[1]),i=g(e,o);this.onDrag(i),this.rafZoomTimeout&&window.cancelAnimationFrame(this.rafZoomTimeout),this.rafZoomTimeout=window.requestAnimationFrame(()=>{const t=l(e,o),s=this.props.zoom*(t/this.lastPinchDistance);this.setNewZoom(s,i),this.lastPinchDistance=t})}render(){const t=Object(i.getAppStore)().getState().appContext.isRTL,{crop:{x:e,y:o},zoom:s,showGrid:r,style:{},classes:{containerClassName:n,cropAreaClassName:h,imageClassName:p}}=this.props;return Object(i.jsx)("div",{css:this.getStyle,onMouseDown:this.onMouseDown,onTouchStart:this.onTouchStart,"data-testid":"container",className:n,style:{userSelect:"none",touchAction:"none",cursor:"move",display:"flex",justifyContent:"center",alignItems:"center",position:"absolute",top:this.props.widgetArea.top,left:t?null:this.props.widgetArea.left,right:t?document.body.clientWidth-this.props.widgetArea.right:null,width:this.props.widgetArea.width,height:this.props.widgetArea.height},ref:t=>{this.container=t}},Object(i.jsx)(i.ReactResizeDetector,{handleWidth:!0,handleHeight:!0,onResize:this.onResize}),Object(i.jsx)("img",{src:this.props.image,ref:t=>{this.image=t},onLoad:this.onImgLoad,onError:this.onImgError,alt:"",style:{position:"absolute",transform:`translate(${e}px, ${o}px) scale(${s})`,willChange:"transform"},className:p}),this.state.cropSize&&Object(i.jsx)(a,{onCancelCrop:this.props.onCancelCrop,onConfirmCrop:this.props.onConfirmCrop,showGrid:r,style:{width:this.state.cropSize.width,height:this.state.cropSize.height},className:h,svgViewBox:this.props.svgViewBox,svgPath:this.props.svgPath,cropShape:this.props.cropShape,widgetId:this.props.widgetId,screenWidth:this.screenWidth,screenHeight:this.screenHeight,widgetArea:this.props.widgetArea}),this.props.loading&&Object(i.jsx)("div",{style:{position:"absolute",left:"50%",top:"50%"},className:"jimu-secondary-loading"}))}}u.defaultProps={zoom:1,aspect:4/3,maxZoom:10,minZoom:1,showGrid:!0,style:{},classes:{},zoomSpeed:1},u.getMousePoint=t=>({x:Number(t.clientX),y:Number(t.clientY)}),u.getTouchPoint=t=>({x:Number(t.clientX),y:Number(t.clientY)});const f=["image/gif","image/svg+xml"];class w extends i.React.Component{constructor(t){super(t),this.eidtInfoStyle={width:"100%",height:"100%",margin:0},this.onCropChange=t=>{this.setState({crop:t})},this.onCropAreaComplete=(t,e)=>{this.setState({croppedAreaPixels:e})},this.onZoomChange=t=>{this.setState({zoom:t})},this.onConfirmCrop=(t,e,o)=>{if(f.includes(this.props.imageFormat)||this.props.cropType===s.CropType.Fake){const i={cropPosition:this.state.crop,cropZoom:this.state.zoom,svgViewBox:t||"0 0 28 28",svgPath:e||"m0,0l0,28l28,0l0,-28l-28,0z",cropShape:o||"rectangle",cropPixel:this.state.croppedAreaPixels,cropType:s.CropType.Fake};this.props.onConfirmCrop&&this.props.onConfirmCrop(i)}else{const r={cropPosition:this.state.crop,cropZoom:this.state.zoom,svgViewBox:t,svgPath:e,cropShape:o,cropPixel:this.state.croppedAreaPixels,cropType:s.CropType.Real};this.setState({loading:!0}),function(t,e,o){return p(this,void 0,void 0,(function*(){return yield new Promise((function(s,r){HTMLCanvasElement.prototype.toBlob||Object.defineProperty(HTMLCanvasElement.prototype,"toBlob",{value:function(t,e,o){const i=this;setTimeout((function(){const s=atob(i.toDataURL(e,o).split(",")[1]),r=s.length,n=new Uint8Array(r);for(let t=0;t<r;t++)n[t]=s.charCodeAt(t);t(new Blob([n],{type:e||"image/png"}))}))}});const n=new Image;n.setAttribute("crossOrigin","anonymous"),n.src=t,n.addEventListener("load",()=>{const t=document.createElement("canvas");t.width=e.width,t.height=e.height;t.getContext("2d").drawImage(n,e.x,e.y,e.width,e.height,0,0,e.width,e.height),t.toBlob((function(t){const e=URL.createObjectURL(t),r={file:e,fileName:(new Date).getTime().toString()+".jpeg",type:i.ResourceType.Image,url:e,blobUrl:e,referedIds:[],fileFormat:"image/jpeg",originId:o};if(window.jimuConfig.isBuilder){const t=h.AppResourceManager.getInstance();return t.getBlobByBlobUrl(r.file).then(e=>p(this,void 0,void 0,(function*(){r.file=e,t.upLoadFileToResource(r),r.originId&&h.AppResourceManager.getInstance().updateImageResourceItemInfo(r)}))),s(r)}return i.moduleLoader.getJimuForBuilderModules().appBuilderSync.letBuilderAddResource(r),s(r)}),"image/jpeg",.8)}),n.addEventListener("error",()=>r())}))}))}(this.props.image,r.cropPixel,this.props.originId).then(t=>{this.setState({loading:!1}),this.props.onConfirmCrop&&this.props.onConfirmCrop(r,t)},()=>{this.setState({loading:!1})})}},this.state={modal:!0,crop:this.props.crop?this.props.crop:{x:0,y:0},zoom:this.props.cropZoom?this.props.cropZoom:1,aspect:1,showGrid:!1,zoomSpeed:.1,croppedAreaPixels:null,loading:!1}}render(){const t=window.jimuConfig.isBuilder;return i.ReactDOM.createPortal(Object(i.jsx)("div",null,Object(i.jsx)("div",{className:"jimu-widget",style:{zIndex:9999,position:"fixed",top:0,left:0,backgroundColor:"rgb(0, 0, 0, .5)"}}),Object(i.jsx)("div",{style:{zIndex:1e4,position:"absolute",top:0},className:Object(i.classNames)({"jimu-widget d-flex justify-content-center align-items-center":t})},Object(i.jsx)(u,{image:this.props.image,crop:this.state.crop,zoom:this.state.zoom,aspect:this.state.aspect,showGrid:this.state.showGrid,zoomSpeed:this.state.zoomSpeed,onCropChange:this.onCropChange,onCropComplete:this.onCropAreaComplete,onZoomChange:this.onZoomChange,onCancelCrop:this.props.onCancelCrop,onConfirmCrop:this.onConfirmCrop,widgetArea:this.props.widgetArea,widgetId:this.props.widgetId,svgViewBox:this.props.cropParam&&this.props.cropParam.svgViewBox,svgPath:this.props.cropParam&&this.props.cropParam.svgPath,cropShape:this.props.cropParam&&this.props.cropParam.cropShape,loading:this.state.loading}))),document&&document.getElementsByTagName("body")[0])}}}}))}}}));