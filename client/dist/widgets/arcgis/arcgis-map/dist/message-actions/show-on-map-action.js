System.register(["jimu-core","jimu-arcgis"],(function(e){var t,n;return{setters:[function(e){t=e},function(e){n=e}],execute:function(){e(function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=204)}({0:function(e,n){e.exports=t},204:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var r=n(0),a=n(4);class i extends r.AbstractMessageAction{filterMessageType(e,t){return e===r.MessageType.DataRecordSetChange}filterMessage(e){return!0}onRemoveListen(e,t){var n;const a=(null===(n=r.MutableStoreManager.getInstance().getStateValue([this.widgetId]))||void 0===n?void 0:n.showOnMapDatas)||{},i={};Object.entries(a).forEach(e=>{var n;(null===(n=e[1])||void 0===n?void 0:n.messageWidgetId)!==t&&(i[e[0]]=e[1])}),r.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"showOnMapDatas",i)}onExecute(e,t){var n,i,o;const d=this._getActiveViewId(this.widgetId,Object(r.getAppStore)().getState().jimuMapViewsInfo),s=this._getDefaultViewId(this.widgetId,Object(r.getAppStore)().getState().jimuMapViewsInfo),u=d||s;let c=(null===(n=r.MutableStoreManager.getInstance().getStateValue([this.widgetId]))||void 0===n?void 0:n.showOnMapDatas)||{};const g=`${a.SHOW_ON_MAP_DATA_ID_PREFIX}messageAction_${this.widgetId}_${e.dataRecordSetId}_`,l=g+"???",f=d?`${g}${d}`:l;if(s&&s===d&&delete c[l],e.changeType===r.RecordSetChangeType.Create||e.changeType===r.RecordSetChangeType.Update)c[f]={mapWidgetId:this.widgetId,messageWidgetId:e.widgetId,jimuMapViewId:u,dataSource:null===(i=e.dataRecordSet)||void 0===i?void 0:i.dataSource,records:null===(o=e.dataRecordSet)||void 0===o?void 0:o.records,type:a.ShowOnMapDataType.MessageAction,title:f};else if(e.changeType===r.RecordSetChangeType.Remove){const e={};Object.entries(c).forEach(t=>{0!==t[0].indexOf(g)&&(e[t[0]]=t[1])}),c=e}return r.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"showOnMapDatas",c),Promise.resolve(!0)}_getActiveViewId(e,t){return Object.keys(t||{}).find(n=>t[n].mapWidgetId===e&&t[n].isActive)}_getDefaultViewId(e,t){return Object.keys(t||{}).find(n=>t[n].mapWidgetId===e)}}},4:function(e,t){e.exports=n}}))}}}));